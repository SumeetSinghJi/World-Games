_________________________________________________________________________________________________________________

                                            WORLD GAMES - Help Guide

_________________________________________________________________________________________________________________

* Name: World Games
* Creation: 26/09/2023
* Version: 0.1 (Still in testing)
* Description: A C++ game on traditional board and hand games from different cultures around the world.
* Author: Sumeet Singh
* Author address: www.sumeet-singh.com
* Author contact: kurta.kursi@gmail.com
* Publisher: AgniSamooh
* Publisher address: www.agniSamooh.com
* Publisher contact: support@agnisamooh.com
* Location: https://github.com/SumeetSinghJi/world-games
* License: Source Code License: MIT License. Graphical Assets License: Creative Commons Attribution (CC-BY) License.

_________________________________________________________________________________________________________________

                                            LICENSE

_________________________________________________________________________________________________________________

Source Code License:
The source code in this project is licensed under the MIT License.

Copyright (c) 2023 Sumeet Singh

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
[MIT License terms]

Graphical Assets License:
The graphical assets in this project are licensed under the Creative Commons Attribution (CC-BY) License.

Copyright (c) Individual authors are attributed within the "help.txt" file

The graphical assets included in this project are licensed under the Creative Commons Attribution (CC-BY) License. You are free to use, modify, and distribute these assets, provided that you give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.
[CC-BY License terms]


_________________________________________________________________________________________________________________

                                        TABLE OF CONTENTS

_________________________________________________________________________________________________________________


1. SETUP
2. PROGRAMMING LOGIC
3. GAMES AND RULES
4. CREDITS


_________________________________________________________________________________________________________________

                                                1. SETUP


_________________________________________________________________________________________________________________



BACKGROUND

"As the creator, I wanted to dive into programming and learn C++, which I've always been curious about. So, I 
decided to take on the challenge of making a game – something like chess, but simpler. I was getting a bit 
bored of modern board games, so I thought, why not create my own? I focused on crafting easy-to-understand games 
that I've never played before, which made the process both fun and educational. This project is great because 
it lets me experiment with different programming techniques. If I find something that doesn't work, I can tweak 
it without wasting too much time. Plus, I can easily add new features or games in the future without messing up 
what's already there."



HELP

Found in game by clicking on "Help" (Book) option in main menu or read help.txt file



REQUIREMENTS

* Supported OS: Windows 10+ (untested on older or different Operating Systems)
* Processor: at least 7th gen Intel Core i3 or AMD equivalent
* RAM: 4 GB RAM
* Graphics: Either CPU's dedicated GPU, or an HD capable GPU
* Storage: 5 GB available space



SETUP

1. Download zipped game folder from GitHub here:
https://github.com/SumeetSinghJi/world-games/archive/refs/heads/main.zip

2. Unzip to computers user directory in new folder
For Windows: c:\users\username\world-games
For MacOS: default download folder
For Linux: /home/username/world-games

3. Run below file to start game
For Windows: main.exe
For Linux: main
For MacOS: copy over this file main.bin to applications folder and accept default priviliges



ACCESSIBILITY - LANGUAGES

Game supports several languages with full language support below.
Language can be changed from the Settings - Language (World) option in the main menu.
1. ENGLISH
2. 日本語 (JAPANESE)



ACESSIBILITY - INPUT

Game supports using several key input methods to play game
1. Mouse (Preferred)
2. Keyboard
3. Gamepad
4. Touch

Keybindings for Keyboard and Gamepad use default Arrow or D-Pad directional keys with ENTER or A to select.


_________________________________________________________________________________________________________________

                                    2. PROGRAMMING LOGIC

_________________________________________________________________________________________________________________


ENVIRONMENT

C++ game was built on a Windows 11 Operating System desktop environment using Visual Studio code as the IDE.
Game is written in c++ however uses a C programming language library framework 
called SDL2, along with 3 associated SDL2 libraries to create a interactive GUI Window

all 3 Frameworks are downloaded from GitHub
SDL2 (https://github.com/libsdl-org/SDL)- Used for creating a Window and rendering buttons and key inputs
SDL2_image (https://github.com/libsdl-org/SDL_image) - Library for adding non images JPG/PNG etc., to a SDL2 Applicaiton
SDL2_Mixer (https://github.com/libsdl-org/SDL_mixer) - Library for adding sound/music to a SDL2 application
SDL2_TTF (https://github.com/libsdl-org/SDL_ttf) - Library for rendering text/font to SDL2 Window

uses headers below
#include <SDL.h>                          // SDL Requirement
#include <SDL_image.h>                    // SDL Requirement
#include <SDL_ttf.h>                      // SDL Requirement
#include <SDL_mixer.h>                    // SDL Requirement
#include "headers/sdl_loads.h"            // SDL Textures, Sounds, Animations to load
#include "headers/sdl_renders.h"          // SDL Rect/Buttons to render to screen/scene/GUI
#include "headers/sdl_texts.h"            // SDL Text to Render  to screen/scene/GUI
#include "headers/sdl_mouse_handles.h"    // SDL Mouse and Touch keypresses
#include "headers/sdl_keyboard_handles.h" // SDL Keyboard keypresses
#include "headers/sdl_gamepad_handles.h"  // SDL Gamepad controller keypresses



FILES

The below files are contained in the downloaded game directory

./vscode - used by Visual Studio (IDE) for the development environment for coding
./assets - contains subdirectories of various assets e.g. images, sounds, fonts
./headers - contains c++ header files that attach to source file on build
./src - contains all the third party libraries e.g. SDL2
main.cpp - main source code
main.exe - .exe for game
help.txt - Contains all information about game such as requirements, installation, play guide etc.,
Credits.txt - Contains the Credits for the game
CMAKElists-draft.txt - Used for CMAKE, currently Unused due to building with VSCode currently
Various DLL's that third party library DLL compiles with .exe on build {
    libcurl-x64.dll - libcurl
    libzip.dll - libzip
    SDL2_image.dll - SDL2 Image
    SDL2_mixer.dll - SDL2 Mixer
    SDL2_TTF.dll - SDL2 TTF/Font
    SDL2.dll - SDL2
}
world-games_save.txt - in game save file
world-games.code-workspace - used by Visual Studio (IDE) for the development environment for coding
windows_create_shortcut.bat - Used for CMAKE, currently Unused due to building with VSCode currently
windows_create_shortcut.ps1 - Used for CMAKE, currently Unused due to building with VSCode currently



GAME NAVIGATION

Game menu and navigation is based on SDL Game design best practice "scenes".
There are scenes for all different menu options e.g. Settings, or Credits, and a
central hub "scene 6" for in game world map which interconnects with other in game
scenes e.g. "scene 30 = Beijing" where different maps/levels/scenes can be accessed
which all have slight variations of the named function start_spr_game() function depending on regional variations.

headers SDL_renders and SDL_texts will load the HUD depending on regional variation of game.
Navigating through scene is dependent on handle_events() button clicks in GAME LOGIC



SAVING AND LOADING/CONTINUE

A save game text file world-games_save.txt is created on SDL Quit and on main menu Continue button loaded.
uses header below
#include "headers/savegame.h"             // For save/continue functions



UPDATING GAME

There is an in game option to update game. It will contact a repository hosting game depending on which platform
game was downloaded and installed from, which will check the latest version string then download and replace the
existing game directory while retaining save game files.

Uses both headers below
#include "headers/game_update_1.h"        // For downloading latest game update
#include "headers/game_update_2.h"        // For downloading latest game update



MULTIPLAYER

FUTURE DEVELOPMENT - There is future scope to add an multiplayer mode however the time taken for author
to learn C++ web development will take precious time spent elsewhere. Regardless the files and scenes
are in game but not useable.
Uses header below
#include "headers/multiplayer.h"          // FUTURE DEVELOPMENT - For Multiplayer



SCENES

scene 1 = Main menu
scene 2 = Settings
scene 3 = Credits
scene 4 = Achievements
scene 5 = Help
scene 6 = Leaderboard
scene 7 = _____UNUSED_____
scene 8 = _____UNUSED_____
scene 9 = _____UNUSED_____
scene 10 = keybindings
scene 11 = Create name
scene 12 = Create account
scene 13 = Online login
scene 14 = multiplayer lobby
scene 15 = _____UNUSED_____
scene 16 = _____UNUSED_____
scene 17 = _____UNUSED_____
scene 18 = _____UNUSED_____
scene 19 = _____UNUSED_____
scene 20 = _____UNUSED_____
scene 21 = _____UNUSED_____
scene 22 = _____UNUSED_____
scene 23 = _____UNUSED_____
scene 24 = _____UNUSED_____
scene 25 = World map
scene 26 = _____UNUSED_____
scene 27 = Tutorial
scene 28 = _____UNUSED_____
scene 29 = _____UNUSED_____
scene 30 = _____UNUSED_____
scene 31 - beijing - shoushiling (traditional 手勢令), frog 蛙, snake 蛇, centipede 蜈蜙
scene 32 = london - Scissors Paper Rock
scene 33 = paris
scene 34 = berlin
scene 35 = delhi
scene 36 = hawaii
scene 37 = tokyo
scene 38 = seoul
scene 39 = shanghai
scene 40 - Rome - Tic Tac Toe
scene 41 - Kenya
scene 42 - Moscow
scene 43 - Athens
scene 44 - Manilla
scene 45 - Tehran
scene 46 - Tel Aviv
scene 47 - Cairo
scene 48 - Bangkok
scene 49 - Kathmandu
scene 50 - Alaska
scene 51 - _____UNUSED_____




UNLOCKABLE ACHIEVEMENTS

Completing a traditional game from a scene unlocks that achievement.

12 (scene 32): Won Tic Tac Toe


OBJECTIVE

1. Win the game by winning all games around the world while having fun.


_________________________________________________________________________________________________________________

                                            3. GAMES AND RULES
                                    
_________________________________________________________________________________________________________________


Beijing (China) - Rock paper scissors (Chinese; romanized: Shoushiling, traditional: 手勢令. simplified: 手势令)

A seemingly simple game of chance, has woven its way into cultures worldwide, transcending generations and 
borders. Despite its apparent simplicity, its origins are steeped in history, folklore, and strategic 
subtleties. This humble game finds its roots in ancient civilizations and evolves continuously, embracing
new forms and variations.

Origins and Folklore:
The exact origins of rock-paper-scissors are shrouded in mystery, with multiple theories tracing its roots
across different cultures. One of the earliest known versions dates back to China during the 
Han Dynasty (206 BCE – 220 CE). This version, known as "shoushiling," featured hand gestures representing
a rock, a piece of cloth, and scissors. Legend has it that this game was used to resolve disputes and make 
decisions, much like its contemporary usage.

Another theory traces its origins to Japan, where the game was called "jan-ken." It was believed to have
been introduced in the 17th century, gaining popularity among children and adults alike. In Japanese 
folklore, it's said that the game was used by samurai to settle conflicts and make decisions in a manner
that was akin to divination.

Rules and Gameplay:
The game revolves around three elements: rock, paper, and scissors. Each element defeats one and is defeated
by another, creating a cyclic relationship:

Rock crushes scissors.
Scissors cut paper.
Paper covers rock.
Players face off by simultaneously forming one of the three shapes with their hands. After a count or a 
chant, both reveal their chosen gesture, and the winner is determined based on the hierarchy of interactions. 
The game often follows a best-of-three or best-of-five format, adding suspense and strategy.

Cultural Significance and Variations:
Rock-paper-scissors is not merely a game but a cultural phenomenon. It has made its way into various aspects 
of society, from resolving disputes to being used in decision-making processes. Its simplicity and universality 
have led to its integration into pop culture, sports, and even academic research.

Interestingly, different cultures have their variations of the game. For instance, the Korean version, 
"kai-bai-bo," features similar hand gestures but with different names and meanings. In some versions, 
there are additional elements like a well, a lion, or a spock, introducing further complexities and strategies.

Unique Trivia:
Competitive Tournaments: Believe it or not, there are competitive rock-paper-scissors tournaments held 
worldwide. Participants strategize and compete for prizes, showcasing their skill in a seemingly luck-based 
game.

AI and Strategy: Researchers have developed AI programs specifically designed to excel at rock-paper-scissors. 
These programs analyze patterns in human behavior and adapt strategies, demonstrating the complexities within 
what seems like a simple game.

Decision-Making Tool: Beyond its entertainment value, rock-paper-scissors has found applications in 
decision-making processes. Its randomness and unbiased nature make it an interesting tool in scenarios 
where impartial choices are needed.

In summary, rock-paper-scissors transcends its simplistic appearance, embodying centuries of cultural 
heritage and human interaction. Its adaptability and universality continue to fascinate and entertain people 
across the globe, proving that even the simplest of games can carry profound significance in society.



_________________________________________________________________________________________________________________

                                            4. CREDITS
                                    
_________________________________________________________________________________________________________________


                                    Game developer - Sumeet Singh


"I made this in honour of all the 80's and 90's Shareware era developers"


PROGRAMMING LIBRARIES

SDL2 from https://github.com/libsdl-org/SDL
SDL2_images from https://github.com/libsdl-org/SDL_image
SDL2_mixer from https://github.com/libsdl-org/SDL_mixer
SDL2_ttf from https://github.com/libsdl-org/SDL_ttf
curl from https://github.com/curl/curl
libzip from https://github.com/nih-at/libzip


BACKGROUND IMAGES

Background scenes created by A.I. art from creator.nightcafe.studio


SOUNDS

Music taken from pixabay.com
Sound effects taken from pixabay.com


SETTINGS BUTTONS

save button by Nick Frost and Greg Lapin taken from icon-icons.com
update button by Nick Frost and Greg Lapin taken from icon-icons.com
load button by Nick Frost and Greg Lapin taken from icon-icons.com
star button by Gianni Polito taken from icon-icons.com
coin button by iconpacks taken from icon-icons.com
restart button by Radhika Paghdal taken from icon-icons.com
Font, size icon by Ant design from icon-icons.com
book icon by ChrisL21 (Chris) from icon-icons.com
Human button by Bryn Taylor from  icon-icons.com
Computer button by Vexels from icon-icons.com
All button images without attributions taken from respective
authors fromicon-icons.com


COUNTRY BUTTONS

England map icon by Bart Kowalski from icon-icons.com
Beijing/China map icon by Rokey from icon-icons.com
Shanghai map icon by Google from icon-icons.com
Seoul map icon by maxicons from icon-icons.com
Japan map icon by maxicons from icon-icons.com
Hawaii map icon by Zulfa Mahendra from icon-icons.com
Berlin map icon by Manthana Chaiwong from icon-icons.com
Paris map icon by Oleksandr Yershov from icon-icons.com
Delhi map icon by Jemis Mali from icon-icons.com
Singapore map icon by Icons-Land from icon-icons.com
Rome colosseum map icon by Iconka from from icon-icons.com


IN GAME GRAPHICS

Scissor image icon By Author: Gulraiz from Freepik.com
Paper icon by Vexels from icon-icons.com
stone icon by ChrisL21 (Chris) from icon-icons.com
Playing cards - https://opengameart.org/content/playing-cards-vector-png
Senet board image - https://thiefontheflats.blogspot.com/2012/01/printable-senet-boards.html


ANIMATIONS

Fireworks animation by @haenaillust taken from giphy.com




